// variables
// colors
$main-color: 0, 174, 239;
$second-color: 240, 124, 0;
$third-color: 0, 120, 163;
$blue:rgba(0, 174, 239,1);
$orange:rgba(240, 124, 0, 1);
$blueAccent:rgba(0, 120, 163,1);

$yellow:rgba(247, 222, 85, 1);
$sunset:rgba(251, 85, 85, 1);
$rose: rgba(251, 85, 168, 1);

$white:rgba(255,255,255,1);
$black:rgba(0,0,0,1);

$menuFont: 'Poppins', sans-serif;
$headerFont: 'Poppins', sans-serif;
$bodyFont: 'Roboto', Helvetica;

@mixin hover-color($color) {
    &:hover{
        color: $color;
    }
}
@mixin backgroundSize($size:cover) {
    background-size: $size;
    -webkit-background-size: $size;
    -moz-background-size: $size;
    -o-background-size: $size;
}

// can add 'fixed' to end of background property 
@mixin parallax-background($file) {
    background: url($file) no-repeat center center;
    @include backgroundSize;
}


@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}
  
// @mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
//     $u1: unit($min-vw);
//     $u2: unit($max-vw);
//     $u3: unit($min-font-size);
//     $u4: unit($max-font-size);
  
//     @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
//         & {
//             font-size: $min-font-size;
//             @media screen and (min-width: $min-vw) {
//                 font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
//             }
    
//             @media screen and (min-width: $max-vw) {
//                 font-size: $max-font-size;
//             }
//         }
//     }
// }
  
// $min_width: 320px;
// $max_width: 1000px;
// $min_font: 16px;
// $max_font: 22px;

// html {
//     @include fluid-type($min_width, $max_width, $min_font, $max_font);
// }

// html {
//     font-size: min(max(16px, 4vw), 22px);
// }

// body {
//     font-size: clamp(16px, 4vw, 22px);
// } 

%flexRow {
    display:inline-flex;
    flex-direction: row;
}

%flexColumn {
    display:inline-flex;
    flex-direction: column;
}